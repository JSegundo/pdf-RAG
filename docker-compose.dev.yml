services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s

  server:
    build: 
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - RABBITMQ_URL=amqp://rabbitmq:5672
    volumes:
      - ./server:/app
      - /app/node_modules
      - uploads:/app/uploads
    command: npm run dev
    depends_on:
      rabbitmq:
        condition: service_healthy

  processing-service:
    build: 
      context: ./processing-service
      dockerfile: Dockerfile
      cache_from:
        - processing-service:optimized  # Use our tagged version
    image: processing-service:optimized  # Save as optimized/cached version
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - UPLOADS_DIR=/app/uploads
      - PYTHONUNBUFFERED=1
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    volumes:
      - ./processing-service:/app
      - uploads:/app/uploads
      # Add a volume for pip cache
      - pip-cache:/root/.cache/pip
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  rabbitmq_data:
  uploads:
  pip-cache: # New volume for pip cache