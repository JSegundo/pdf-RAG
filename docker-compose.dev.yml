services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s

  postgres:
    image: ankane/pgvector
    ports:
      - "5438:5432"
    environment:
      - POSTGRES_PASSWORD=yourpassword
      - POSTGRES_USER=postgres
      - POSTGRES_DB=ragdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

  server:
    build: 
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - RABBITMQ_URL=amqp://rabbitmq:5672
    volumes:
      - ./server:/app
      - /app/node_modules
      - uploads:/app/uploads
    command: npm run dev
    depends_on:
      rabbitmq:
        condition: service_healthy

  processing-service:
    build: 
      context: ./processing-service
      dockerfile: Dockerfile
      cache_from:
        - processing-service:optimized  # Use our tagged version
    image: processing-service:optimized  # Save as optimized/cached version
    ports:
      - "8000:8000"
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - UPLOADS_DIR=/app/uploads
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgres://postgres:yourpassword@postgres:5432/ragdb  # Add this
      - API_SERVER_URL=http://server:3000

    deploy:
      resources:
        limits:
          memory: 7G
        reservations:
          memory: 2G
    volumes:
      - ./processing-service:/app
      - uploads:/app/uploads
      # Add a volume for pip cache
      - pip-cache:/root/.cache/pip
    depends_on:
      rabbitmq:
        condition: service_healthy
      server:
        condition: service_started
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  rabbitmq_data:
  uploads:
  pip-cache: # New volume for pip cache
  postgres_data:
  pgadmin_data: